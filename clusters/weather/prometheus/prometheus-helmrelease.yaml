---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: flux-system
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus
  targetNamespace: prometheus
  install:
    createNamespace: true
  interval: 10m
  values:
    crds:
      enabled: true
      upgradeJob: 
        enable: true
    customRules: {}
      # AlertmanagerFailedReload:
      #   for: 3m
      # AlertmanagerMembersInconsistent:
      #   for: 5m
      #   severity: "warning"

    ## Create default rules for monitoring the cluster
    ##
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8sContainerCpuUsageSecondsTotal: true
        k8sContainerMemoryCache: true
        k8sContainerMemoryRss: true
        k8sContainerMemorySwap: true
        k8sContainerResource: true
        k8sContainerMemoryWorkingSetBytes: true
        k8sPodOwner: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: true
        kubeSchedulerRecording: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
        windows: true

    additionalPrometheusRulesMap: {}
    #  rule-name:
    #    groups:
    #    - name: my_group
    #      rules:
    #      - record: my_record
    #        expr: 100 * my_record

    alertmanager:
      enabled: true
      ingress:
        enabled: false
        annotations: {}
        labels: {}
      alertmanagerSpec:
        replicas: 1
        retention: 120h
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-storage
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
        nodeSelector:
          kubernetes.io/hostname: blizzard
        resources: {}
        # requests:
        #   memory: 400Mi
    grafana:
      enabled: true
      adminUser: admin
      adminPassword: prom-operator
      ingress:
        enabled: true
        ingressClassName: traefik-traefik
        annotations:
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
        hosts:
        - grafana.lude.net
        path: /
    kubernetesServiceMonitors:
      enabled: true
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeControllerManager:
      enabled: true
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: true
    kubeScheduler:
      enabled: true
    kubeProxy:
      enabled: true
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
      operatingSystems:
        linux:
          enabled: true
        aix:
          enabled: false
        darwin:
          enabled: false
    prometheusOperator:
      enabled: true
      tls:
        enabled: true
        tlsMinVersion: VersionTLS13
      nodeSelector:
        kubernetes.io/hostname: blizzard
    prometheus:
      enabled: true
      ## Configure network policy for the prometheus
      networkPolicy:
        enabled: false
        flavor: cilium
      prometheusSpec:
        nodeSelector:
          kubernetes.io/hostname: blizzard
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-storage
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
        priorityClassName: ""
